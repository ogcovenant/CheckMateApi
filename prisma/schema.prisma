// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String               @id @default(uuid())
  email         String               @unique
  password      String
  createdAt     DateTime             @default(now())
  tasks         Task[]
  notifications Notifications[]
  resetPassId   ResetPasswordTable[]
}

model Task {
  id           String    @id @default(uuid())
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  title        String    @db.VarChar(255)
  dueDate      String
  priority     String    @db.VarChar(255)
  tags         Tag[]
  note         String?   @db.Text
  status       String
  category     Category[]
  subtasks     Subtask[]
  noOfSubtasks Int
  user         User?     @relation(fields: [userId], references: [id])
  userId       String?
}

model Subtask {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  status    String
  task      Task?    @relation(fields: [taskId], references: [id])
  taskId    String
}

model Tag {
  id    String @id @default(uuid())
  title String @db.VarChar(255)

  task   Task?   @relation(fields: [taskId], references: [id])
  taskId String?
}

model Category {
  id    String @id @default(uuid())
  title String @db.VarChar(255)

  task   Task?  @relation(fields: [taskId], references: [id])
  taskId String 
}

model ResetPasswordTable {
  id        String   @id @default(uuid())
  expiresIn DateTime
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model Notifications {
  id          String   @id @default(uuid())
  title       String
  description String
  createdAt   DateTime @default(now())
  type        String
  user        User     @relation(fields: [userId], references: [id])
  userId      String
}
